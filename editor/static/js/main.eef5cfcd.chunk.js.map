{"version":3,"sources":["logo.svg","editor/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HOTKEYS","LIST_TYPES","IconBold","className","xmlns","width","height","fill","fillRule","d","IconItalic","IconH1Text","IconH2Text","IconBulletList","viewBox","IconNumberedList","toggleMark","editor","format","isMarkActive","Editor","removeMark","addMark","isBlockActive","nodes","match","n","type","marks","Element","attributes","children","element","Leaf","leaf","bold","code","italic","underline","BlockButton","icon","useSlate","active","onMouseDown","event","preventDefault","isActive","isList","includes","Transforms","unwrapNodes","split","setNodes","block","wrapNodes","toggleBlock","MarkButton","Button","props","classnames","initialValue","text","RichTextExample","useState","value","setValue","renderElement","useCallback","renderLeaf","useMemo","withHistory","withReact","createEditor","onClick","console","log","onChange","placeholder","spellCheck","autoFocus","onKeyDown","hotkey","isHotkey","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.eef5cfcd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useCallback, useMemo, useState } from 'react'\r\nimport isHotkey from 'is-hotkey'\r\nimport { Editable, withReact, useSlate, Slate } from 'slate-react'\r\nimport { Editor, Transforms, createEditor } from 'slate'\r\nimport { withHistory } from 'slate-history'\r\n\r\n// import { Button, Icon, Toolbar } from '../components'\r\n// import IconBold from '../assets/bold_icon.svg';\r\n// import IconItalic from '../assets/italic_icon.svg';\r\n// import IconH1Text from '../assets/h1_icon.svg';\r\n// import IconH2Text from '../assets/h2_icon.svg';\r\n// import IconQuote from '../assets/icon_quote.svg';\r\n// import IconBulletList from '../assets/bullet_list_icon.svg';\r\n// import IconNumberedList from '../assets/numbered_list_icon.svg';\r\nimport classnames from 'classnames';\r\n\r\nimport './css/editor.css';\r\n\r\nconst HOTKEYS = {\r\n  'mod+b': 'bold',\r\n  'mod+i': 'italic',\r\n  'mod+u': 'underline',\r\n  'mod+`': 'code',\r\n}\r\n\r\nconst LIST_TYPES = ['numbered-list', 'bulleted-list']\r\n\r\nconst IconBold = (<svg className=\"vk-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path fill=\"#818C99\" d=\"M18.246 12.66c.482.33.872.746 1.173 1.246.3.5.451 1.088.451 1.764 0 .812-.17 1.498-.513 2.058-.342.56-.832 1.002-1.471 1.325-.677.346-1.457.59-2.34.733-.883.143-1.923.214-3.118.214H4.5a.5.5 0 1 1 0-1H5c1 0 1-1 1-3V8c0-2 0-3-1-3h-.5a.5.5 0 0 1 0-1h8.312c2.187 0 3.766.3 4.735.902.97.601 1.455 1.488 1.455 2.661 0 .541-.11 1.017-.327 1.426-.218.41-.53.765-.936 1.066a5.618 5.618 0 0 1-1.32.722c-.51.203-1.06.372-1.645.507v.214c.586.06 1.195.19 1.826.39.632.198 1.18.456 1.646.772zM15 7.83c0-.89-.301-1.585-.904-2.083C13.494 5.25 12.591 5 11.386 5c-.172 0-.396.006-.673.017l-.425.017a.3.3 0 0 0-.288.3V10.7a.3.3 0 0 0 .3.3h.407c1.467 0 2.55-.285 3.247-.855C14.65 9.575 15 8.804 15 7.83zm1 7.676c0-1.13-.402-1.998-1.205-2.6-.804-.604-1.96-.906-3.466-.906-.174 0-.404.006-.692.017a60.6 60.6 0 0 0-.35.015.3.3 0 0 0-.287.3v5.66c.082.282.338.521.767.716.43.195.95.292 1.562.292 1.087 0 1.97-.306 2.65-.917.68-.61 1.021-1.47 1.021-2.577z\"/></g></svg>);\r\nconst IconItalic = (<svg className=\"vk-svg\" height=\"24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"m0 0h24v24h-24z\"/><path d=\"m6 20 .192-.823c.218-.008.515-.032.89-.073a4.42 4.42 0 0 0 .869-.164c.293-.098.516-.246.67-.445.155-.2.262-.43.322-.694l2.582-11.185a4.53 4.53 0 0 0 .079-.395c.015-.105.022-.184.022-.237 0-.315-.174-.561-.524-.738s-.885-.318-1.607-.423l.192-.823h8.874l-.192.823c-.24.015-.548.05-.924.107a5.816 5.816 0 0 0 -.846.175c-.308.098-.536.25-.682.457-.147.206-.25.438-.31.693l-2.582 11.197c-.03.128-.055.248-.074.36-.018.113-.028.2-.028.26 0 .376.175.637.524.784.35.146.89.253 1.619.32l-.192.824z\" fill=\"#818C99\"/></g></svg>);\r\nconst IconH1Text = (<svg className=\"vk-svg\" fill=\"#000000\" height=\"24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"m0 0h24v24h-24z\"/><g fill=\"#818C99\"><path d=\"m5 6h4v12h-4zm10 0h4v12h-4z\"/><path d=\"m8 11h8v1h-8zm1 5.5c0 2.5 0 2.8 2 2.8v.7h-8v-.7c1.96 0 2-.3 2-2.71v-.09zm10 0c0 2.5 0 2.8 2 2.8v.7h-8v-.7c1.96 0 2-.3 2-2.71v-.09zm-10-9c0-2.5 0-2.8 2-2.8v-.7h-8v.7c1.96 0 2 .3 2 2.71v.09zm10 0c0-2.5 0-2.8 2-2.8v-.7h-8v.7c1.96 0 2 .3 2 2.71v.09z\"/></g></g></svg>);\r\nconst IconH2Text = (<svg className=\"vk-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><g fill=\"#818C99\"><path d=\"M7 10h3v8H7zM10 13h4v1h-4z\"/><path d=\"M10 17.015c0 1.99 0 2.288 1 2.288V20H6v-.697c1 0 1-.298 1-2.288 0-.02 1-.02 3 0zm7 0c0 1.99 0 2.288 1 2.288V20h-5v-.697c1 0 1-.298 1-2.288 0-.02 1-.02 3 0zM10 10.985c0-1.99 0-2.288 1-2.288V8H6v.697c1 0 1 .298 1 2.288 0 .02 1 .02 3 0zM17 10.985c0-1.99 0-2.288 1-2.288V8h-5v.697c1 0 1 .298 1 2.288 0 .02 1 .02 3 0z\"/><path d=\"M14 10h3v8h-3z\"/></g></g></svg>);\r\nconst IconQuote = (<svg className=\"vk-svg\" xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"><g fill=\"none\" fillRule=\"evenodd\"><path d=\"M0 0h24v24H0z\"/><path fill=\"#818C99\" d=\"M10.972 10l.01.14a3.54 3.54 0 0 1 .017.453l.001.157c0 4.28-2.686 7.75-6 7.75a.127.127 0 0 1-.063-.238c1.279-.73 2.132-1.464 2.558-2.203a5.474 5.474 0 0 0 .707-2.13A3.5 3.5 0 1 1 7.5 7a3.515 3.515 0 0 1 3.472 3.001zm9 0l.01.14a3.54 3.54 0 0 1 .017.453l.001.157c0 4.28-2.686 7.75-6 7.75a.127.127 0 0 1-.063-.238c1.279-.73 2.132-1.464 2.558-2.203a5.474 5.474 0 0 0 .707-2.13A3.5 3.5 0 1 1 16.5 7a3.515 3.515 0 0 1 3.472 3.001z\"/></g></svg>);\r\nconst IconBulletList = (<svg className=\"material-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#818C99\" width=\"24px\" height=\"24px\"><path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/></svg>);\r\nconst IconNumberedList = (<svg className=\"material-svg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#818C99\" width=\"24px\" height=\"24px\"><path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/><path d=\"M0 0h24v24H0z\" fill=\"none\"/></svg>);\r\n\r\nconst RichTextExample = () => {\r\n  const [value, setValue] = useState(initialValue)\r\n\r\n  const renderElement = useCallback(props => <Element {...props} />, [])\r\n  const renderLeaf = useCallback(props => <Leaf {...props} />, [])\r\n\r\n  const editor = useMemo(() => withHistory(withReact(createEditor())), [])\r\n  // <BlockButton format=\"block-quote\" icon={IconQuote} />\r\n  return (\r\n    <div>\r\n      <div className=\"editor-header\">\r\n        <button className=\"button button--tertiary\" onClick={() => {\r\n          console.log(value)\r\n        }}>\r\n          Опубликовать\r\n        </button>\r\n      </div>\r\n      <Slate editor={editor} value={value} onChange={value => setValue(value)}>\r\n        <div className=\"dzin-editor--toolbar\">\r\n          <MarkButton format=\"bold\" icon={IconBold} />\r\n          <MarkButton format=\"italic\" icon={IconItalic} />\r\n          <BlockButton format=\"heading-one\" icon={IconH1Text} />\r\n          <BlockButton format=\"heading-two\" icon={IconH2Text} />\r\n          <BlockButton format=\"numbered-list\" icon={IconBulletList} />\r\n          <BlockButton format=\"bulleted-list\" icon={IconNumberedList} />\r\n        </div>\r\n        <Editable\r\n          renderElement={renderElement}\r\n          renderLeaf={renderLeaf}\r\n          placeholder=\"Заголовок\"\r\n          spellCheck\r\n          autoFocus\r\n          onKeyDown={event => {\r\n            for (const hotkey in HOTKEYS) {\r\n              if (isHotkey(hotkey, event)) {\r\n                event.preventDefault()\r\n                const mark = HOTKEYS[hotkey]\r\n                toggleMark(editor, mark)\r\n              }\r\n            }\r\n          }}\r\n          className=\"dzin-editor\"\r\n        />\r\n      </Slate>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst toggleBlock = (editor, format) => {\r\n  const isActive = isBlockActive(editor, format)\r\n  const isList = LIST_TYPES.includes(format)\r\n\r\n  Transforms.unwrapNodes(editor, {\r\n    match: n => LIST_TYPES.includes(n.type),\r\n    split: true,\r\n  })\r\n\r\n  Transforms.setNodes(editor, {\r\n    type: isActive ? 'paragraph' : isList ? 'list-item' : format,\r\n  })\r\n\r\n  if (!isActive && isList) {\r\n    const block = { type: format, children: [] }\r\n    Transforms.wrapNodes(editor, block)\r\n  }\r\n}\r\n\r\nconst toggleMark = (editor, format) => {\r\n  const isActive = isMarkActive(editor, format)\r\n\r\n  if (isActive) {\r\n    Editor.removeMark(editor, format)\r\n  } else {\r\n    Editor.addMark(editor, format, true)\r\n  }\r\n}\r\n\r\nconst isBlockActive = (editor, format) => {\r\n  const [match] = Editor.nodes(editor, {\r\n    match: n => n.type === format,\r\n  })\r\n\r\n  return !!match\r\n}\r\n\r\nconst isMarkActive = (editor, format) => {\r\n  const marks = Editor.marks(editor)\r\n  return marks ? marks[format] === true : false\r\n}\r\n\r\nconst Element = ({ attributes, children, element }) => {\r\n  switch (element.type) {\r\n    case 'block-quote':\r\n      return <blockquote {...attributes}>{children}</blockquote>\r\n    case 'bulleted-list':\r\n      return <ul {...attributes}>{children}</ul>\r\n    case 'heading-one':\r\n      return <h1 {...attributes}>{children}</h1>\r\n    case 'heading-two':\r\n      return <h2 {...attributes}>{children}</h2>\r\n    case 'list-item':\r\n      return <li {...attributes}>{children}</li>\r\n    case 'numbered-list':\r\n      return <ol {...attributes}>{children}</ol>\r\n    default:\r\n      return <p {...attributes}>{children}</p>\r\n  }\r\n}\r\n\r\nconst Leaf = ({ attributes, children, leaf }) => {\r\n  if (leaf.bold) {\r\n    children = <strong>{children}</strong>\r\n  }\r\n\r\n  if (leaf.code) {\r\n    children = <code>{children}</code>\r\n  }\r\n\r\n  if (leaf.italic) {\r\n    children = <em>{children}</em>\r\n  }\r\n\r\n  if (leaf.underline) {\r\n    children = <u>{children}</u>\r\n  }\r\n\r\n  return <span {...attributes}>{children}</span>\r\n}\r\n\r\nconst BlockButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isBlockActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleBlock(editor, format)\r\n      }}\r\n    >\r\n      {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst MarkButton = ({ format, icon }) => {\r\n  const editor = useSlate()\r\n  return (\r\n    <Button\r\n      active={isMarkActive(editor, format)}\r\n      onMouseDown={event => {\r\n        event.preventDefault()\r\n        toggleMark(editor, format)\r\n      }}\r\n    >\r\n      {icon}\r\n    </Button>\r\n  )\r\n}\r\n\r\nconst Button = (props) => {\r\n  const {children, attributes, onMouseDown, active} = props;\r\n  return (\r\n    <button \r\n      {...attributes} \r\n      onMouseDown={onMouseDown}\r\n      className={classnames(\"toolbar-button\", {\r\n        \"active\": active\r\n      })}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n\r\nconst initialValue = [\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      { text: 'This is editable ' },\r\n      { text: 'rich', bold: true },\r\n      { text: ' text, ' },\r\n      { text: 'much', italic: true },\r\n      { text: ' better than a ' },\r\n      { text: '<textarea>', code: true },\r\n      { text: '!' },\r\n    ],\r\n  },\r\n  {\r\n    type: 'paragraph',\r\n    children: [\r\n      {\r\n        text:\r\n          \"Since it's rich text, you can do things like turn a selection of text \",\r\n      },\r\n      { text: 'bold', bold: true },\r\n      {\r\n        text:\r\n          ', or add a semantically rendered block quote in the middle of the page, like this:',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    type: 'block-quote',\r\n    children: [{ text: 'A wise quote.' }],\r\n  },\r\n  {\r\n    type: 'paragraph',\r\n    children: [{ text: 'Try it out for yourself!' }],\r\n  },\r\n]\r\n\r\nexport default RichTextExample","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport Editor from './editor';\n\nfunction App() {\n  return (\n    <Editor/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}